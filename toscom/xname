#!/bin/bash

#######################################################################
### NEWMODULEを変更したいモジュール名に設定して ./xname を実行する。###
### 更に変更したい時は OLDMODULEを現在のモジュール名に設定する。    ###
### これを使うことで com に戻すことも可能になる。                   ###
###                                                                 ###
### newenv.tar.gz を使った環境構築時は newenv を開いて              ###
### その中の NEWMODULEを同じモジュール名に設定してから実行する。    ###
###                                                                 ###
### com_testtos.tar.gz (xname実施後は comが変更されている)を        ###
### 使いたい時は、このアーカイブを展開後 ./xname を再実行する。     ###
### エラーは無視して問題ない。                                      ###
###                                                                 ###
### smplcomm.tar.gz や analyzer.tar.gz を使いたい時は               ###
### これらのアーカイブ展開後、その中にある newenv を開いて、        ###
### NEWMODULEを変更後のモジュール名に設定して ./newenvを実行する。  ###
### エラーは無視して問題ない。                                      ###
###                                                                 ###
### smplComm/の xs1・xs2もモジュール名変更に対応するが、            ###
### これらのファイル切り替えバッチを使った後、最初の1回だけ         ###
### smplComm/newenv を再実行すること。                              ###
### xs1 で Ver1のソースに切り替え後 ./newenv を実行した場合は、     ###
###   rm (新モジュール名)_window.*                                  ###
### をコマンド入力して Ver1 に不要なソースを削除すること。          ###
#######################################################################


#######################################################################
# NEWMODULE＝変更後モジュール名。                                     #
# OLDMODULE＝変更前モジュール名。(最初は comのままにすること)         #
#######################################################################

NEWMODULE="tos"
OLDMODULE="com"

# モジュール名について
# ・英数字のみとし _ は含めないこと。
# ・英文字は必ず小文字にすること。(大文字は別途使う為)
# ・3文字にすることを推奨。(3文字でなくても動くがソースが乱れる可能性あり)
# ・NEWMODULEの内容を、OLDMODULEの内容で終わる文字列にしないことを推奨する。
#   最初の変換は成功するが、2回目以降の変換ができなくなる。

##################################
# 以後の記述は一切変更しないこと #
##################################

function convert() {
  grep -l "${2}_" $1 | xargs sed -i.cnvbak -e "s/${2}_/${3}_/g"
  if [ "x$1" = "xREADME.md" ]; then return; fi
  grep -l "${2^^}_" $1 | xargs sed -i.cnvbak -e "s/${2^^}_/${3^^}_/g"
  if [ "x$4" = "x1" ]; then
    # 日本語を含むモジュール名だと失敗するかも
    grep -l "${2}モジュール" $1 | \
        xargs sed -i.cnvbak -e "s/${2}モジュール/${3}モジュール/g"
  fi
}

WINDOWTAZ="_window.tar.gz"
WINDOWFILES="${NEWMODULE}_window.h ${NEWMODULE}_window.c"

function procFiles() {
  echo ">> convert document files"
  convert "*.txt" $1 $2 1
  #convert "README.md" $1 $2 1

  if [ -e ${1}${WINDOWTAZ} ]; then
    tar xvfz ${1}${WINDOWTAZ} >& /dev/null
  fi
  tar xvfz ${1}_testtos.tar.gz >& /dev/null

  echo ">> convert C source files"
  convert "*.c" $1 $2 1
  echo ">> convert C header files"
  convert "*.h" $1 $2 1
  echo ">> convert BUILD/makefile"
  convert BUILD/makefile $1 $2 0
  sed -i.cnvbak -e "s/${1}\.o/${2}\.o/g" BUILD/makefile

  echo ">> rename $1 files"
  for FILE in $(ls ${1}_*.?); do mv $FILE ${FILE//${1}_/${2}_}; done

  echo ">> remove temporary files"
  rm -fr *.cnvbak BUILD/*.cnvbak

  if [ -e ${1}${WINDOWTAZ} ]; then
    tar cvfz ${2}$WINDOWTAZ $WINDOWFILES >& /dev/null
    rm -fr ${1}${WINDOWTAZ} $WINDOWFILES
    chmod 444 ${2}${WINDOWTAZ}
  fi
  tar cvfz ${2}_testtos.tar.gz ${2}_testtos.c >& /dev/null
  rm -fr ${1}_testtos.tar.gz ${2}_testtos.c
  chmod 444 ${2}_testtos.tar.gz
}

procFiles $OLDMODULE $NEWMODULE


