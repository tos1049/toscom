toscom grimoire Ver3.1

今後アップデートがあったときに、使う側が対応しなければならない案件を
本ファイルにまとめて提示します。


Ver3.1より前の toscomで開発環境を作成している場合の影響点

・com_custom.h 修正
ウィンドウ機能を使用する場合、下記を書き足す必要があります。
-------------------------- ここから ------------------------------
/*
 * ＜ウィンドウ機能で使用するマクロ宣言＞
 * com_inoutWindow()で使用される特殊キーのキーコード
 * Linux/Windows(Cygwin)でほぼ同じ値だったが、BSだけは差分があったため、
 * それを吸収した宣言としている。
 * ただそれも環境によって変わる可能性が充分あるため、動作しない場合は
 * 正しいキーコードを調べて、宣言値を変更する必要がある。
 */
enum {
    COM_KEYLF  = 0x0a,   // Enter
    COM_KEYEOT = 0x04,   // Ctrl + D
#ifdef __linux__
    COM_KEYBS  = 0x08,   // Backspace
#else
    COM_KEYBS  = 0x7F,   // Cygwinでは 0x7F で動作することを確認
#endif
    COM_KEYESC = 0x1B    // ESC
};
-------------------------- ここまで ------------------------------
追加位置は問わない。特にこだわりがないならファイルの末尾に追加で問題ない。


・com_debugMacro.h 追加
新たに com_debugMacro.h が追加され、com_if.h や com_debug.h に記述していた
一部のマクロ宣言が移動しています。これは toscom内部処理で使う側面が強く、
あまり汎用的ではないマクロを示しています。
(とはいえ宣言自体は公開しているので各自のソースで使用することは可能です)

開発環境にこのファイルのリンクが無い場合
以下のコマンドを投入してシンボリックリンクを作成して下さい。
    ln -s ../toscom/com_debugMacro.h
もし toscomを展開しているディレクトリが ../toscom/ ではない場合は、
適宜 展開しているディレクトリ名に差し替えて下さい。


・com_spec.c 修正
com_proc.c に記述していた変数定義を com_spec.c に移動しています。
まだ暫定版すが生成したライブラリを使う場合、com_proc.cに変数定義をしてしまうと
そのライブラリを含めてのビルド時に makefileで定義した APLNAME や VERSION が
反映できないため(com_proc.c はライブラリに含まれてビルド済みになるため)です。
ライブラリ生成後も com_spec.c は依然として、個別にビルドする想定です。

com_spec.c に何も変更を加えていない場合は
    cp ../toscom/com_spec.c .
で自分の開発環境にファイル自体をコピーで問題ありません。

com_spec.c に独自の変更を入れている場合は、
以下のコピペをお願いします(都合2ヶ所)。

const char *com_getAplName( void ) の前に下記をコピペ
-------------------------- ここから ------------------------------
// 以下の関数群のプロトタイプ宣言は com_if.h

/* makefile のコンパイルオプション APLNAMEで指定された文字列 */
static char  gAPLNAME[] =
#ifdef APLNAME    // "アプリ名" の形式で宣言すること
    APLNAME;
#else
    "";    // 定義がないときは空文字とする
#endif
-------------------------- ここまで ------------------------------

const char *com_getVersion( void ) の前に下記をコピペ
-------------------------- ここから ------------------------------
/* makefile のコンパイルオプション VERSIONで指定された文字列 */
static char  gVERSION[] =
#ifdef VERSION    // "バージョン" の形式で宣言すること
    VERSION;
#else
    "0";   // 定義がないときは "0" とする
#endif
-------------------------- ここまで ------------------------------

